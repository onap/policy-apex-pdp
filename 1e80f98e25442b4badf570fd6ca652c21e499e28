{
  "comments": [
    {
      "key": {
        "uuid": "866aba8a_c49f649c",
        "filename": "core/core-deployment/src/test/java/org/onap/policy/apex/core/deployment/EngineServiceFacadeTest.java",
        "patchSetId": 13
      },
      "lineNbr": 59,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-07-23T13:49:25Z",
      "side": 1,
      "message": "I slightly suspect if we should go to the EngineServiceFacade class and put a better wait for thread something like that. But lets see.",
      "range": {
        "startLine": 59,
        "startChar": 8,
        "endLine": 59,
        "endChar": 60
      },
      "revId": "1e80f98e25442b4badf570fd6ca652c21e499e28",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40493de9_a88fffaa",
        "filename": "core/core-deployment/src/test/java/org/onap/policy/apex/core/deployment/EngineServiceFacadeTest.java",
        "patchSetId": 13
      },
      "lineNbr": 59,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-07-23T13:57:02Z",
      "side": 1,
      "message": "build failed. :-(\n\nwhat is different with these couple of places than before?  I thought these calls were just replacing sleep() calls.  Does this have the effect expected when there is no actual test condition?\n\nThe real intention of this sonar complaint is to eliminate these flaky sleep() calls altogether and wait on something (e.g., a latch) that indicates that things are ready to proceed.  Thus it would be good if a latch could be set inside the engine when it\u0027s running, then these tests could just wait for the latch.  Perhaps that can be done in another review?",
      "parentUuid": "866aba8a_c49f649c",
      "range": {
        "startLine": 59,
        "startChar": 8,
        "endLine": 59,
        "endChar": 60
      },
      "revId": "1e80f98e25442b4badf570fd6ca652c21e499e28",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26f8738b_66eb940c",
        "filename": "core/core-deployment/src/test/java/org/onap/policy/apex/core/deployment/EngineServiceFacadeTest.java",
        "patchSetId": 13
      },
      "lineNbr": 59,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-07-23T14:10:48Z",
      "side": 1,
      "message": "Actually, I think the problem is not with these changes. It has to do something with another change related to double initiation in EngineServiceFacade which happened last week. That was a bug fix, but we need to tweak some timings around that for thread cleanup and initialization.",
      "parentUuid": "40493de9_a88fffaa",
      "range": {
        "startLine": 59,
        "startChar": 8,
        "endLine": 59,
        "endChar": 60
      },
      "revId": "1e80f98e25442b4badf570fd6ca652c21e499e28",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92cc6c51_0320c644",
        "filename": "core/core-deployment/src/test/java/org/onap/policy/apex/core/deployment/EngineServiceFacadeTest.java",
        "patchSetId": 13
      },
      "lineNbr": 59,
      "author": {
        "id": 4903
      },
      "writtenOn": "2020-07-23T15:20:03Z",
      "side": 1,
      "message": "Agreed Jim. This will need another review. A latch in the EngineServiceFacade class init method should fix these.",
      "parentUuid": "26f8738b_66eb940c",
      "range": {
        "startLine": 59,
        "startChar": 8,
        "endLine": 59,
        "endChar": 60
      },
      "revId": "1e80f98e25442b4badf570fd6ca652c21e499e28",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}