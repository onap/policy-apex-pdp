{
    "engineServiceParameters": {
        "name": "MyApexEngine",
        "version": "0.0.1",
        "id": 45,
        "instanceCount": 4,
        "deploymentPort": 12345,
        "policyModelFileName": "examples/models/SampleDomain/SamplePolicyModelJAVA.json",
        "engineParameters": {
            "executorParameters": {
                "JAVA": {
                    "parameterClassName": "org.onap.policy.apex.plugins.executor.java.JavaExecutorParameters"
                }
            }
        }
    },
    "eventOutputParameters": {
        "FirstProducer": {
            "carrierTechnologyParameters": {
                "carrierTechnology": "RESTCLIENT",
                "parameterClassName": "org.onap.policy.apex.plugins.event.carrier.restclient.RestClientCarrierTechnologyParameters",
                "parameters": {
                    "url": "http://localhost:32801/TestFile2Rest/apex/event/PostEvent"
                }
            },
            "eventProtocolParameters": {
                "eventProtocol": "JSON"
            }
        }
    },
    "eventInputParameters": {
        "TheKafkaConsumer": {
            "carrierTechnologyParameters": {
                "carrierTechnology": "KAFKA",
                "parameterClassName": "org.onap.policy.apex.plugins.event.carrier.kafka.KafkaCarrierTechnologyParameters",
                "parameters": {
                    "bootstrapServers": "localhost:49092",
                    "groupId": "apex-group-id",
                    "enableAutoCommit": true,
                    "autoCommitTime": 1000,
                    "sessionTimeout": 30000,
                    "consumerPollTime": 100,
                    "consumerTopicList": [
                        "apex-in-0",
                        "apex-in-1"
                    ],
                    "keyDeserializer": "org.apache.kafka.common.serialization.StringDeserializer",
                    "valueDeserializer": "org.apache.kafka.common.serialization.StringDeserializer"
                }
            },
            "eventProtocolParameters": {
                "eventProtocol": "JSON"
            }
        }
    }
}
