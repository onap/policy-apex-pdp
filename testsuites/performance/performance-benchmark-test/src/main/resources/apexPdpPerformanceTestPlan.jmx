<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="APEX PDP STABILITY TEST PLAN" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port">23324</stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="threads" elementType="Argument">
            <stringProp name="Argument.name">threads</stringProp>
            <stringProp name="Argument.value">${__P(threads,20)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="threadsTimeOutInMs" elementType="Argument">
            <stringProp name="Argument.name">threadsTimeOutInMs</stringProp>
            <stringProp name="Argument.value">${__P(threadsTimeOutInMs,5000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="wait" elementType="Argument">
            <stringProp name="Argument.name">wait</stringProp>
            <stringProp name="Argument.value">${__P(wait,10000)}</stringProp>
            <stringProp name="Argument.desc">Wait time between requests to apex-pdp</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PAP_PORT" elementType="Argument">
            <stringProp name="Argument.name">PAP_PORT</stringProp>
            <stringProp name="Argument.value">${__P(PAP_PORT,30211)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_PORT" elementType="Argument">
            <stringProp name="Argument.name">API_PORT</stringProp>
            <stringProp name="Argument.value">${__P(API_PORT,30785)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="APEX_PORT" elementType="Argument">
            <stringProp name="Argument.name">APEX_PORT</stringProp>
            <stringProp name="Argument.value">${__P(APEX_PORT,30687)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DMAAP_PORT" elementType="Argument">
            <stringProp name="Argument.name">DMAAP_PORT</stringProp>
            <stringProp name="Argument.value">${__P(DMAAP_PORT,31345)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="HOSTNAME" elementType="Argument">
            <stringProp name="Argument.name">HOSTNAME</stringProp>
            <stringProp name="Argument.value">${__P(HOSTNAME,10.2.0.120)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="LOG_PATH" elementType="Argument">
            <stringProp name="Argument.name">LOG_PATH</stringProp>
            <stringProp name="Argument.value">${__P(LOG_PATH,/home/arkadiusza/apex_stability)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list">
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">https://${HOSTNAME}:${API_PORT}</stringProp>
            <stringProp name="Authorization.username">healthcheck</stringProp>
            <stringProp name="Authorization.password">zb!XztG34</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">https://${HOSTNAME}:${PAP_PORT}</stringProp>
            <stringProp name="Authorization.username">healthcheck</stringProp>
            <stringProp name="Authorization.password">zb!XztG34</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">https://${HOSTNAME}:${APEX_PORT}</stringProp>
            <stringProp name="Authorization.username">healthcheck</stringProp>
            <stringProp name="Authorization.password">zb!XztG34</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
        </collectionProp>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </SetupThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Policy" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;tosca_definitions_version&quot;: &quot;tosca_simple_yaml_1_1_0&quot;,&#xd;
  &quot;topology_template&quot;: {&#xd;
    &quot;policies&quot;: [&#xd;
      {&#xd;
        &quot;operational.apex.stabilityTestDefaultDomain&quot;: {&#xd;
          &quot;type&quot;: &quot;onap.policies.native.Apex&quot;,&#xd;
          &quot;type_version&quot;: &quot;1.0.0&quot;,&#xd;
          &quot;properties&quot;: {&#xd;
            &quot;engineServiceParameters&quot;: {&#xd;
              &quot;name&quot;: &quot;MyApexEngine&quot;,&#xd;
              &quot;version&quot;: &quot;0.0.1&quot;,&#xd;
              &quot;id&quot;: 45,&#xd;
              &quot;instanceCount&quot;: 4,&#xd;
              &quot;deploymentPort&quot;: 12561,&#xd;
              &quot;engineParameters&quot;: {&#xd;
                &quot;executorParameters&quot;: {&#xd;
                  &quot;JAVASCRIPT&quot;: {&#xd;
                    &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.plugins.executor.javascript.JavascriptExecutorParameters&quot;&#xd;
                  }&#xd;
                },&#xd;
                &quot;contextParameters&quot;: {&#xd;
                  &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.context.parameters.ContextParameters&quot;,&#xd;
                  &quot;schemaParameters&quot;: {&#xd;
                    &quot;Avro&quot;: {&#xd;
                      &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.plugins.context.schema.avro.AvroSchemaHelperParameters&quot;&#xd;
                    }&#xd;
                  }&#xd;
                }&#xd;
              },&#xd;
              &quot;policy_type_impl&quot;: {&#xd;
                &quot;apexPolicyModel&quot;: {&#xd;
                  &quot;key&quot;: {&#xd;
                    &quot;name&quot;: &quot;APEXgRPCPolicy&quot;,&#xd;
                    &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                  },&#xd;
                  &quot;keyInformation&quot;: {&#xd;
                    &quot;key&quot;: {&#xd;
                      &quot;name&quot;: &quot;APEXgRPCPolicy_KeyInfo&quot;,&#xd;
                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                    },&#xd;
                    &quot;keyInfoMap&quot;: {&#xd;
                      &quot;entry&quot;: [&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;APEXgRPCPolicy&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;APEXgRPCPolicy&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;b8424cdb-29fb-3566-b77a-f4f847d81cc9&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;APEXgRPCPolicy:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;APEXgRPCPolicy_Albums&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;APEXgRPCPolicy_Albums&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;9922906c-ccaa-34f7-95e2-bcc36e77821b&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;APEXgRPCPolicy_Albums:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;APEXgRPCPolicy_Events&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;APEXgRPCPolicy_Events&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;5bf28afd-787c-3138-a3e1-b33ad94a038a&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;APEXgRPCPolicy_Events:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;APEXgRPCPolicy_KeyInfo&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;APEXgRPCPolicy_KeyInfo&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;68abaa6f-8d03-3a53-9590-007115817d5c&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;APEXgRPCPolicy_KeyInfo:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;APEXgRPCPolicy_Policies&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;APEXgRPCPolicy_Policies&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;819d06c3-33c2-3031-aa78-96281aa4270a&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;APEXgRPCPolicy_Policies:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;APEXgRPCPolicy_Schemas&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;APEXgRPCPolicy_Schemas&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;8e67d466-f990-3a39-9fd7-4490cac342dc&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;APEXgRPCPolicy_Schemas:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;APEXgRPCPolicy_Tasks&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;APEXgRPCPolicy_Tasks&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;4668db3d-6fe2-3885-8e47-f30cd0102f0a&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;APEXgRPCPolicy_Tasks:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSActionIdentifiersType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSActionIdentifiersType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;6e5fa19b-14df-37e3-a4ae-8c537e861a82&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;CDSActionIdentifiersType:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSCreateSubscriptionPayloadType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSCreateSubscriptionPayloadType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;8350ac5e-c157-38b9-9614-a0f93a830e60&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;CDSCreateSubscriptionPayloadType:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSDeleteSubscriptionPayloadType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSDeleteSubscriptionPayloadType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;12658406-9147-3c9d-a38c-5ad5e30b092b&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;CDSDeleteSubscriptionPayloadType:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSRequestCommonHeaderType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSRequestCommonHeaderType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;35590ac0-062c-39f1-8786-b4ff716e30b1&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;CDSRequestCommonHeaderType:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSResponseCommonHeaderType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSResponseCommonHeaderType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;dd7e1805-885a-350b-aaf9-ed541321ae3c&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;CDSResponseCommonHeaderType:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSResponseEvent&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSResponseEvent&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;15161037-9ac8-3223-820f-4e743562a345&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;CDSResponseEvent:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSResponsePayloadType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSResponsePayloadType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;97dc5f58-25bb-3c20-8d53-fdb70d7ca256&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;CDSResponsePayloadType:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSResponsePolicy&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSResponsePolicy&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;c28b05a8-7436-3ac0-82ca-6d5fc18c9584&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;CDSResponsePolicy:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSResponseStatusEvent&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSResponseStatusEvent&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;7986e21b-32f7-302e-9554-31f21b673493&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;CDSResponseStatusEvent:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSResponseStatusType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSResponseStatusType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;92b8a2cf-344e-3ce1-8cc0-2b7d3cb695fa&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;CDSResponseStatusType:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSResponseTask&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSResponseTask&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;d22c78a5-272c-391d-8083-28588280caf9&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;CDSResponseTask:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CreateSubscriptionPayloadEvent&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CreateSubscriptionPayloadEvent&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;92162397-1a8e-3a3f-a469-d2af7700af4a&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;CreateSubscriptionPayloadEvent:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CreateSubscriptionPayloadTask&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CreateSubscriptionPayloadTask&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;bc0c69f0-52ed-38ea-b468-ae4a6fd1730d&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;CreateSubscriptionPayloadTask:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CreateSubscriptionRequestEvent&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CreateSubscriptionRequestEvent&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;7cfcf843-337e-3f41-b755-5043cb0a08fc&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;CreateSubscriptionRequestEvent:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CreateSubscriptionRequestTask&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CreateSubscriptionRequestTask&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;89cb75e9-f06c-30d3-b4ff-698d45f63869&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;CreateSubscriptionRequestTask:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;DeleteSubscriptionPayloadEvent&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;DeleteSubscriptionPayloadEvent&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;994fa441-04ab-33bb-832d-1cd12ab5d074&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;DeleteSubscriptionPayloadEvent:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;DeleteSubscriptionPayloadTask&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;DeleteSubscriptionPayloadTask&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;0f519117-5fea-3e4b-941f-8f778100465f&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;DeleteSubscriptionPayloadTask:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;DeleteSubscriptionRequestEvent&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;DeleteSubscriptionRequestEvent&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;15d618d8-1689-3a05-89a5-05efa9388f65&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;DeleteSubscriptionRequestEvent:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;DeleteSubscriptionRequestTask&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;DeleteSubscriptionRequestTask&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;acb772fe-d442-39e3-98f9-b1080caf4150&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;DeleteSubscriptionRequestTask:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;PMSubscriptionAlbum&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;PMSubscriptionAlbum&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;c2bd6f0d-6854-317a-9be2-97c08338428c&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;PMSubscriptionAlbum:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;PMSubscriptionOutputEvent&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;PMSubscriptionOutputEvent&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;992b7819-9f69-3aa0-bb0f-6e45ea15ce05&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;PMSubscriptionOutputEvent:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;PMSubscriptionType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;PMSubscriptionType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;73c1c397-4fc3-357f-93b6-a8ad707fbaae&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;PMSubscriptionType:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;568b7345-9de1-36d3-b6a3-9b857e6809a1&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;ReceiveEventPolicy:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;ReceivePMSubscriptionTask&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;ReceivePMSubscriptionTask&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;6c1c6c45-26e0-3591-94bf-679d20e283f4&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;ReceivePMSubscriptionTask:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;SimpleIntType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;SimpleIntType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;153791fd-ae0a-36a7-88a5-309a7936415d&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleIntType:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;8a4957cf-9493-3a76-8c22-a208e23259af&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SimpleStringType:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;SubscriptionStatusType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;SubscriptionStatusType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;597643b1-9db1-31ce-85d0-e1c63c43b30b&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SubscriptionStatusType:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;SubscriptionType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;SubscriptionType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;184547bb-7d64-3cb2-a273-d7185102c5ce&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;SubscriptionType:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;UUIDType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;UUIDType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;6a8cc68e-dfc8-3403-9c6d-071c886b319c&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;UUIDType:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;testPolicyB&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;testPolicyB&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;UUID&quot;: &quot;ead590a3-ba2e-3a01-b6e9-9329f5c8fee1&quot;,&#xd;
                            &quot;description&quot;: &quot;Generated description for concept referred to by key \&quot;testPolicyB:0.0.1\&quot;&quot;&#xd;
                          }&#xd;
                        }&#xd;
                      ]&#xd;
                    }&#xd;
                  },&#xd;
                  &quot;policies&quot;: {&#xd;
                    &quot;key&quot;: {&#xd;
                      &quot;name&quot;: &quot;APEXgRPCPolicy_Policies&quot;,&#xd;
                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                    },&#xd;
                    &quot;policyMap&quot;: {&#xd;
                      &quot;entry&quot;: [&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSResponsePolicy&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;policyKey&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSResponsePolicy&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;template&quot;: &quot;Freestyle&quot;,&#xd;
                            &quot;state&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;CDSResponseState&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;stateKey&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;CDSResponsePolicy&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;CDSResponseState&quot;&#xd;
                                    },&#xd;
                                    &quot;trigger&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSResponseEvent&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;stateOutputs&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: &quot;ResponseOutput&quot;,&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;CDSResponsePolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;CDSResponseState&quot;,&#xd;
                                              &quot;localName&quot;: &quot;ResponseOutput&quot;&#xd;
                                            },&#xd;
                                            &quot;outgoingEvent&quot;: {&#xd;
                                              &quot;name&quot;: &quot;CDSResponseStatusEvent&quot;,&#xd;
                                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nextState&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.0&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;localName&quot;: &quot;NULL&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    },&#xd;
                                    &quot;contextAlbumReference&quot;: [],&#xd;
                                    &quot;taskSelectionLogic&quot;: {&#xd;
                                      &quot;key&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;logicFlavour&quot;: &quot;UNDEFINED&quot;,&#xd;
                                      &quot;logic&quot;: &quot;&quot;&#xd;
                                    },&#xd;
                                    &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                      &quot;entry&quot;: []&#xd;
                                    },&#xd;
                                    &quot;defaultTask&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSResponseTask&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;taskReferences&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;CDSResponseTask&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;CDSResponsePolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;CDSResponseState&quot;,&#xd;
                                              &quot;localName&quot;: &quot;CDSResponsePolicy&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;CDSResponsePolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;CDSResponseState&quot;,&#xd;
                                              &quot;localName&quot;: &quot;ResponseOutput&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    }&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;firstState&quot;: &quot;CDSResponseState&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;policyKey&quot;: {&#xd;
                              &quot;name&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;template&quot;: &quot;Freestyle&quot;,&#xd;
                            &quot;state&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;CreateOrDeleteState&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;stateKey&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;CreateOrDeleteState&quot;&#xd;
                                    },&#xd;
                                    &quot;trigger&quot;: {&#xd;
                                      &quot;name&quot;: &quot;PMSubscriptionOutputEvent&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;stateOutputs&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: &quot;CreateSubscriptionPayload&quot;,&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;CreateOrDeleteState&quot;,&#xd;
                                              &quot;localName&quot;: &quot;CreateSubscriptionPayload&quot;&#xd;
                                            },&#xd;
                                            &quot;outgoingEvent&quot;: {&#xd;
                                              &quot;name&quot;: &quot;CreateSubscriptionPayloadEvent&quot;,&#xd;
                                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nextState&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;localName&quot;: &quot;CreateSubscription&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: &quot;DeleteSubscriptionPayload&quot;,&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;CreateOrDeleteState&quot;,&#xd;
                                              &quot;localName&quot;: &quot;DeleteSubscriptionPayload&quot;&#xd;
                                            },&#xd;
                                            &quot;outgoingEvent&quot;: {&#xd;
                                              &quot;name&quot;: &quot;DeleteSubscriptionPayloadEvent&quot;,&#xd;
                                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nextState&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;localName&quot;: &quot;DeleteSubscription&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    },&#xd;
                                    &quot;contextAlbumReference&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;PMSubscriptionAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;taskSelectionLogic&quot;: {&#xd;
                                      &quot;key&quot;: &quot;TaskSelectionLogic&quot;,&#xd;
                                      &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                                      &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2020 Nordix Foundation.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.info(executor.subject.id);\n\nvar pmSubscriptionInfo = executor.getContextAlbum(\&quot;PMSubscriptionAlbum\&quot;).get(executor.inFields.get(\&quot;albumID\&quot;).toString())\nvar changeType = pmSubscriptionInfo.get(\&quot;changeType\&quot;).toString()\n\nif (\&quot;CREATE\&quot;.equals(changeType)) {\n    executor.subject.getTaskKey(\&quot;CreateSubscriptionPayloadTask\&quot;).copyTo(executor.selectedTask);\n}\nelse if (\&quot;DELETE\&quot;.equals(changeType)) {\n    executor.subject.getTaskKey(\&quot;DeleteSubscriptionPayloadTask\&quot;).copyTo(executor.selectedTask);\n}\n\ntrue;&quot;&#xd;
                                    },&#xd;
                                    &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                      &quot;entry&quot;: []&#xd;
                                    },&#xd;
                                    &quot;defaultTask&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CreateSubscriptionPayloadTask&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;taskReferences&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;CreateSubscriptionPayloadTask&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;CreateOrDeleteState&quot;,&#xd;
                                              &quot;localName&quot;: &quot;ReceiveEventPolicy&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;CreateOrDeleteState&quot;,&#xd;
                                              &quot;localName&quot;: &quot;CreateSubscriptionPayload&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        },&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;DeleteSubscriptionPayloadTask&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;CreateOrDeleteState&quot;,&#xd;
                                              &quot;localName&quot;: &quot;ReceiveEventPolicy&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;CreateOrDeleteState&quot;,&#xd;
                                              &quot;localName&quot;: &quot;DeleteSubscriptionPayload&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    }&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;CreateSubscription&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;stateKey&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;CreateSubscription&quot;&#xd;
                                    },&#xd;
                                    &quot;trigger&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CreateSubscriptionPayloadEvent&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;stateOutputs&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: &quot;IssueCreateSubscriptionRequestOutput&quot;,&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;CreateSubscription&quot;,&#xd;
                                              &quot;localName&quot;: &quot;IssueCreateSubscriptionRequestOutput&quot;&#xd;
                                            },&#xd;
                                            &quot;outgoingEvent&quot;: {&#xd;
                                              &quot;name&quot;: &quot;CreateSubscriptionRequestEvent&quot;,&#xd;
                                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nextState&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.0&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;localName&quot;: &quot;NULL&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    },&#xd;
                                    &quot;contextAlbumReference&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;PMSubscriptionAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;taskSelectionLogic&quot;: {&#xd;
                                      &quot;key&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;logicFlavour&quot;: &quot;UNDEFINED&quot;,&#xd;
                                      &quot;logic&quot;: &quot;&quot;&#xd;
                                    },&#xd;
                                    &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                      &quot;entry&quot;: []&#xd;
                                    },&#xd;
                                    &quot;defaultTask&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CreateSubscriptionRequestTask&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;taskReferences&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;CreateSubscriptionRequestTask&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;CreateSubscription&quot;,&#xd;
                                              &quot;localName&quot;: &quot;ReceiveEventPolicy&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;CreateSubscription&quot;,&#xd;
                                              &quot;localName&quot;: &quot;IssueCreateSubscriptionRequestOutput&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    }&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;DeleteSubscription&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;stateKey&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;DeleteSubscription&quot;&#xd;
                                    },&#xd;
                                    &quot;trigger&quot;: {&#xd;
                                      &quot;name&quot;: &quot;DeleteSubscriptionPayloadEvent&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;stateOutputs&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: &quot;IssueDeleteSubscriptionRequestOutput&quot;,&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;DeleteSubscription&quot;,&#xd;
                                              &quot;localName&quot;: &quot;IssueDeleteSubscriptionRequestOutput&quot;&#xd;
                                            },&#xd;
                                            &quot;outgoingEvent&quot;: {&#xd;
                                              &quot;name&quot;: &quot;DeleteSubscriptionRequestEvent&quot;,&#xd;
                                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nextState&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.0&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;localName&quot;: &quot;NULL&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    },&#xd;
                                    &quot;contextAlbumReference&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;PMSubscriptionAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;taskSelectionLogic&quot;: {&#xd;
                                      &quot;key&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;logicFlavour&quot;: &quot;UNDEFINED&quot;,&#xd;
                                      &quot;logic&quot;: &quot;&quot;&#xd;
                                    },&#xd;
                                    &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                      &quot;entry&quot;: []&#xd;
                                    },&#xd;
                                    &quot;defaultTask&quot;: {&#xd;
                                      &quot;name&quot;: &quot;DeleteSubscriptionRequestTask&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;taskReferences&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;DeleteSubscriptionRequestTask&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;DeleteSubscription&quot;,&#xd;
                                              &quot;localName&quot;: &quot;ReceiveEventPolicy&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;DeleteSubscription&quot;,&#xd;
                                              &quot;localName&quot;: &quot;IssueDeleteSubscriptionRequestOutput&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    }&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;ReceiveSubscriptionState&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;stateKey&quot;: {&#xd;
                                      &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                      &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                      &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;localName&quot;: &quot;ReceiveSubscriptionState&quot;&#xd;
                                    },&#xd;
                                    &quot;trigger&quot;: {&#xd;
                                      &quot;name&quot;: &quot;testPolicyB&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;stateOutputs&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: &quot;ReceivePMSubscriptionOutput&quot;,&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;ReceiveSubscriptionState&quot;,&#xd;
                                              &quot;localName&quot;: &quot;ReceivePMSubscriptionOutput&quot;&#xd;
                                            },&#xd;
                                            &quot;outgoingEvent&quot;: {&#xd;
                                              &quot;name&quot;: &quot;PMSubscriptionOutputEvent&quot;,&#xd;
                                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                            },&#xd;
                                            &quot;nextState&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;NULL&quot;,&#xd;
                                              &quot;localName&quot;: &quot;CreateOrDeleteState&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    },&#xd;
                                    &quot;contextAlbumReference&quot;: [&#xd;
                                      {&#xd;
                                        &quot;name&quot;: &quot;PMSubscriptionAlbum&quot;,&#xd;
                                        &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                      }&#xd;
                                    ],&#xd;
                                    &quot;taskSelectionLogic&quot;: {&#xd;
                                      &quot;key&quot;: &quot;NULL&quot;,&#xd;
                                      &quot;logicFlavour&quot;: &quot;UNDEFINED&quot;,&#xd;
                                      &quot;logic&quot;: &quot;&quot;&#xd;
                                    },&#xd;
                                    &quot;stateFinalizerLogicMap&quot;: {&#xd;
                                      &quot;entry&quot;: []&#xd;
                                    },&#xd;
                                    &quot;defaultTask&quot;: {&#xd;
                                      &quot;name&quot;: &quot;ReceivePMSubscriptionTask&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;taskReferences&quot;: {&#xd;
                                      &quot;entry&quot;: [&#xd;
                                        {&#xd;
                                          &quot;key&quot;: {&#xd;
                                            &quot;name&quot;: &quot;ReceivePMSubscriptionTask&quot;,&#xd;
                                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                          },&#xd;
                                          &quot;value&quot;: {&#xd;
                                            &quot;key&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;ReceiveSubscriptionState&quot;,&#xd;
                                              &quot;localName&quot;: &quot;ReceiveEventPolicy&quot;&#xd;
                                            },&#xd;
                                            &quot;outputType&quot;: &quot;DIRECT&quot;,&#xd;
                                            &quot;output&quot;: {&#xd;
                                              &quot;parentKeyName&quot;: &quot;ReceiveEventPolicy&quot;,&#xd;
                                              &quot;parentKeyVersion&quot;: &quot;0.0.1&quot;,&#xd;
                                              &quot;parentLocalName&quot;: &quot;ReceiveSubscriptionState&quot;,&#xd;
                                              &quot;localName&quot;: &quot;ReceivePMSubscriptionOutput&quot;&#xd;
                                            }&#xd;
                                          }&#xd;
                                        }&#xd;
                                      ]&#xd;
                                    }&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;firstState&quot;: &quot;ReceiveSubscriptionState&quot;&#xd;
                          }&#xd;
                        }&#xd;
                      ]&#xd;
                    }&#xd;
                  },&#xd;
                  &quot;tasks&quot;: {&#xd;
                    &quot;key&quot;: {&#xd;
                      &quot;name&quot;: &quot;APEXgRPCPolicy_Tasks&quot;,&#xd;
                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                    },&#xd;
                    &quot;taskMap&quot;: {&#xd;
                      &quot;entry&quot;: [&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSResponseTask&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSResponseTask&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSActionIdentifiersType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSResponseCommonHeaderType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;payload&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;payload&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSResponsePayloadType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;status&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;status&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSResponseStatusType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;status&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;status&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;SubscriptionStatusType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: []&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;PMSubscriptionAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2020 Nordix. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\n\nvar uuidType = java.util.UUID;\n\nvar albumID = uuidType.fromString(\&quot;d0050623-18e5-46c9-9298-9a567990cd7c\&quot;);\n\nvar pmSubscriptionInfo = executor.getContextAlbum(\&quot;PMSubscriptionAlbum\&quot;).get(albumID.toString());\n\nvar responseStatus = executor.subject.getOutFieldSchemaHelper(\&quot;status\&quot;).createNewInstance();\n\nresponseStatus.put(\&quot;subscriptionName\&quot;, pmSubscriptionInfo.get(\&quot;subscription\&quot;).get(\&quot;subscriptionName\&quot;))\nresponseStatus.put(\&quot;nfName\&quot;, pmSubscriptionInfo.get(\&quot;nfName\&quot;))\nresponseStatus.put(\&quot;changeType\&quot;, pmSubscriptionInfo.get(\&quot;changeType\&quot;))\n\nvar response = executor.inFields.get(\&quot;payload\&quot;)\n\nif (\&quot;failure\&quot;.equals(response.get(\&quot;create_DasH_subscription_DasH_response\&quot;).get(\&quot;odl_DasH_response\&quot;).get(\&quot;status\&quot;))) {\n    responseStatus.put(\&quot;message\&quot;, \&quot;failed\&quot;)\n} else {\n    responseStatus.put(\&quot;message\&quot;, \&quot;success\&quot;)\n}\n\nexecutor.outFields.put(\&quot;status\&quot;, responseStatus)\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CreateSubscriptionPayloadTask&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CreateSubscriptionPayloadTask&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;UUIDType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;UUIDType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;payload&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;payload&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSCreateSubscriptionPayloadType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: []&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;PMSubscriptionAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2020 Nordix. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.info(executor.subject.id);\n\nvar pmSubscriptionInfo = executor.getContextAlbum(\&quot;PMSubscriptionAlbum\&quot;).get(executor.inFields.get(\&quot;albumID\&quot;).toString())\n\nvar payloadProperties = executor.subject.getOutFieldSchemaHelper(\&quot;payload\&quot;).createNewSubInstance(\&quot;create_DasH_subscription_DasH_properties_record\&quot;);\n\npayloadProperties.put(\&quot;nfName\&quot;,  pmSubscriptionInfo.get(\&quot;nfName\&quot;))\npayloadProperties.put(\&quot;subscriptionName\&quot;,  pmSubscriptionInfo.get(\&quot;subscription\&quot;).get(\&quot;subscriptionName\&quot;))\npayloadProperties.put(\&quot;administrativeState\&quot;, pmSubscriptionInfo.get(\&quot;subscription\&quot;).get(\&quot;administrativeState\&quot;))\npayloadProperties.put(\&quot;fileBasedGP\&quot;,  pmSubscriptionInfo.get(\&quot;subscription\&quot;).get(\&quot;fileBasedGP\&quot;).toString())\npayloadProperties.put(\&quot;fileLocation\&quot;, pmSubscriptionInfo.get(\&quot;subscription\&quot;).get(\&quot;fileLocation\&quot;))\npayloadProperties.put(\&quot;measurementGroups\&quot;, pmSubscriptionInfo.get(\&quot;subscription\&quot;).get(\&quot;measurementGroups\&quot;))\n\nvar payloadEntry = executor.subject.getOutFieldSchemaHelper(\&quot;payload\&quot;).createNewSubInstance(\&quot;CDSRequestPayloadEntry\&quot;);\npayloadEntry.put(\&quot;create_DasH_subscription_DasH_properties\&quot;, payloadProperties)\n\nvar payload = executor.subject.getOutFieldSchemaHelper(\&quot;payload\&quot;).createNewInstance();\npayload.put(\&quot;create_DasH_subscription_DasH_request\&quot;, payloadEntry);\n\nexecutor.outFields.put(\&quot;albumID\&quot;, executor.inFields.get(\&quot;albumID\&quot;))\nexecutor.outFields.put(\&quot;payload\&quot;, payload);\n\nexecutor.logger.info(\&quot;Sending Create Subscription Event to CDS\&quot;)\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CreateSubscriptionRequestTask&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CreateSubscriptionRequestTask&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;UUIDType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;payload&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;payload&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSCreateSubscriptionPayloadType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSActionIdentifiersType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSRequestCommonHeaderType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;payload&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;payload&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSCreateSubscriptionPayloadType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: []&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;PMSubscriptionAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2020 Nordix. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.info(executor.subject.id);\n\nvar pmSubscriptionInfo = executor.getContextAlbum(\&quot;PMSubscriptionAlbum\&quot;).get(executor.inFields.get(\&quot;albumID\&quot;).toString())\nvar payload = executor.inFields.get(\&quot;payload\&quot;)\nvar actionName = \&quot;create-subscription\&quot;\n\nvar commonHeader = executor.subject.getOutFieldSchemaHelper(\&quot;commonHeader\&quot;).createNewInstance();\ncommonHeader.put(\&quot;originatorId\&quot;, \&quot;sdnc\&quot;);\ncommonHeader.put(\&quot;requestId\&quot;, \&quot;123456-1000\&quot;);\ncommonHeader.put(\&quot;subRequestId\&quot;, \&quot;sub-123456-1000\&quot;);\n\nvar actionIdentifiers = executor.subject.getOutFieldSchemaHelper(\&quot;actionIdentifiers\&quot;).createNewInstance();\nactionIdentifiers.put(\&quot;actionName\&quot;, actionName);\nactionIdentifiers.put(\&quot;blueprintName\&quot;, \&quot;pm_control\&quot;);\nactionIdentifiers.put(\&quot;blueprintVersion\&quot;, \&quot;1.0.0\&quot;);\nactionIdentifiers.put(\&quot;mode\&quot;, \&quot;sync\&quot;);\n\nexecutor.outFields.put(\&quot;commonHeader\&quot;, commonHeader);\nexecutor.outFields.put(\&quot;actionIdentifiers\&quot;, actionIdentifiers);\nexecutor.outFields.put(\&quot;payload\&quot;, payload);\n\nexecutor.logger.info(\&quot;Sending Activate Subscription Event to CDS\&quot;)\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;DeleteSubscriptionPayloadTask&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;DeleteSubscriptionPayloadTask&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;UUIDType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;UUIDType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;payload&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;payload&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSDeleteSubscriptionPayloadType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: []&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;PMSubscriptionAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2020 Nordix. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.info(executor.subject.id);\n\nvar pmSubscriptionInfo = executor.getContextAlbum(\&quot;PMSubscriptionAlbum\&quot;).get(executor.inFields.get(\&quot;albumID\&quot;).toString())\n\nvar payloadProperties = executor.subject.getOutFieldSchemaHelper(\&quot;payload\&quot;).createNewSubInstance(\&quot;delete_DasH_subscription_DasH_properties_record\&quot;);\n\npayloadProperties.put(\&quot;nfName\&quot;,  pmSubscriptionInfo.get(\&quot;nfName\&quot;))\npayloadProperties.put(\&quot;subscriptionName\&quot;,  pmSubscriptionInfo.get(\&quot;subscription\&quot;).get(\&quot;subscriptionName\&quot;))\npayloadProperties.put(\&quot;administrativeState\&quot;, pmSubscriptionInfo.get(\&quot;subscription\&quot;).get(\&quot;administrativeState\&quot;))\npayloadProperties.put(\&quot;fileBasedGP\&quot;,  pmSubscriptionInfo.get(\&quot;subscription\&quot;).get(\&quot;fileBasedGP\&quot;).toString())\npayloadProperties.put(\&quot;fileLocation\&quot;, pmSubscriptionInfo.get(\&quot;subscription\&quot;).get(\&quot;fileLocation\&quot;))\npayloadProperties.put(\&quot;measurementGroups\&quot;, pmSubscriptionInfo.get(\&quot;subscription\&quot;).get(\&quot;measurementGroups\&quot;))\n\nvar payloadEntry = executor.subject.getOutFieldSchemaHelper(\&quot;payload\&quot;).createNewSubInstance(\&quot;CDSRequestPayloadEntry\&quot;);\npayloadEntry.put(\&quot;delete_DasH_subscription_DasH_properties\&quot;, payloadProperties)\n\nvar payload = executor.subject.getOutFieldSchemaHelper(\&quot;payload\&quot;).createNewInstance();\npayload.put(\&quot;delete_DasH_subscription_DasH_request\&quot;, payloadEntry);\n\nexecutor.outFields.put(\&quot;albumID\&quot;, executor.inFields.get(\&quot;albumID\&quot;))\nexecutor.outFields.put(\&quot;payload\&quot;, payload);\n\nexecutor.logger.info(\&quot;Sending delete Subscription Event to CDS\&quot;)\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;DeleteSubscriptionRequestTask&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;DeleteSubscriptionRequestTask&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;UUIDType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;payload&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;payload&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSDeleteSubscriptionPayloadType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSActionIdentifiersType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSRequestCommonHeaderType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;payload&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;payload&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSDeleteSubscriptionPayloadType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: []&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;PMSubscriptionAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2020 Nordix. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\n\nexecutor.logger.info(executor.subject.id);\n\nvar pmSubscriptionInfo = executor.getContextAlbum(\&quot;PMSubscriptionAlbum\&quot;).get(executor.inFields.get(\&quot;albumID\&quot;).toString())\nvar payload = executor.inFields.get(\&quot;payload\&quot;)\nvar actionName = \&quot;delete-subscription\&quot;\n\nvar commonHeader = executor.subject.getOutFieldSchemaHelper(\&quot;commonHeader\&quot;).createNewInstance();\ncommonHeader.put(\&quot;originatorId\&quot;, \&quot;sdnc\&quot;);\ncommonHeader.put(\&quot;requestId\&quot;, \&quot;123456-1000\&quot;);\ncommonHeader.put(\&quot;subRequestId\&quot;, \&quot;sub-123456-1000\&quot;);\n\nvar actionIdentifiers = executor.subject.getOutFieldSchemaHelper(\&quot;actionIdentifiers\&quot;).createNewInstance();\nactionIdentifiers.put(\&quot;actionName\&quot;, actionName);\nactionIdentifiers.put(\&quot;blueprintName\&quot;, \&quot;pm_control\&quot;);\nactionIdentifiers.put(\&quot;blueprintVersion\&quot;, \&quot;1.0.0\&quot;);\nactionIdentifiers.put(\&quot;mode\&quot;, \&quot;sync\&quot;);\n\nexecutor.outFields.put(\&quot;commonHeader\&quot;, commonHeader);\nexecutor.outFields.put(\&quot;actionIdentifiers\&quot;, actionIdentifiers);\nexecutor.outFields.put(\&quot;payload\&quot;, payload);\n\nexecutor.logger.info(\&quot;Sending Deactivate Subscription Event to CDS\&quot;)\n\ntrue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;ReceivePMSubscriptionTask&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;ReceivePMSubscriptionTask&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;inputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;changeType&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;changeType&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;closedLoopControlName&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;closedLoopControlName&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;nfName&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;nfName&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;policyName&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;policyName&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;subscription&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;subscription&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;SubscriptionType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;outputFields&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;UUIDType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            },&#xd;
                            &quot;taskParameters&quot;: {&#xd;
                              &quot;entry&quot;: []&#xd;
                            },&#xd;
                            &quot;contextAlbumReference&quot;: [&#xd;
                              {&#xd;
                                &quot;name&quot;: &quot;PMSubscriptionAlbum&quot;,&#xd;
                                &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                              }&#xd;
                            ],&#xd;
                            &quot;taskLogic&quot;: {&#xd;
                              &quot;key&quot;: &quot;TaskLogic&quot;,&#xd;
                              &quot;logicFlavour&quot;: &quot;JAVASCRIPT&quot;,&#xd;
                              &quot;logic&quot;: &quot;/*\n * ============LICENSE_START=======================================================\n *  Copyright (C) 2020 Nordix. All rights reserved.\n * ================================================================================\n * Licensed under the Apache License, Version 2.0 (the \&quot;License\&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \&quot;AS IS\&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n * ============LICENSE_END=========================================================\n */\nvar uuidType = java.util.UUID;\n\n\n//albumID will be used to fetch info from our album later\nvar albumID = uuidType.fromString(\&quot;d0050623-18e5-46c9-9298-9a567990cd7c\&quot;);\nvar pmSubscriptionInfo = executor.getContextAlbum(\&quot;PMSubscriptionAlbum\&quot;).getSchemaHelper().createNewInstance();\nvar returnValue = true;;\n\nif(executor.inFields.get(\&quot;policyName\&quot;) != null) {\n    var changeType = executor.inFields.get(\&quot;changeType\&quot;)\n    var nfName = executor.inFields.get(\&quot;nfName\&quot;)\n    var policyName = executor.inFields.get(\&quot;policyName\&quot;)\n    var closedLoopControlName = executor.inFields.get(\&quot;closedLoopControlName\&quot;)\n    var subscription = executor.inFields.get(\&quot;subscription\&quot;)\n\n    pmSubscriptionInfo.put(\&quot;nfName\&quot;, executor.inFields.get(\&quot;nfName\&quot;));\n    pmSubscriptionInfo.put(\&quot;changeType\&quot;, executor.inFields.get(\&quot;changeType\&quot;))\n    pmSubscriptionInfo.put(\&quot;policyName\&quot;, executor.inFields.get(\&quot;policyName\&quot;))\n    pmSubscriptionInfo.put(\&quot;closedLoopControlName\&quot;, executor.inFields.get(\&quot;closedLoopControlName\&quot;))\n    pmSubscriptionInfo.put(\&quot;subscription\&quot;, subscription)\n\n    executor.getContextAlbum(\&quot;PMSubscriptionAlbum\&quot;).put(albumID.toString(), pmSubscriptionInfo);\n\n    executor.outFields.put(\&quot;albumID\&quot;, albumID)\n} else {\n    executor.message = \&quot;Received invalid event\&quot;\n    returnValue = false;\n}\nreturnValue;&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        }&#xd;
                      ]&#xd;
                    }&#xd;
                  },&#xd;
                  &quot;events&quot;: {&#xd;
                    &quot;key&quot;: {&#xd;
                      &quot;name&quot;: &quot;APEXgRPCPolicy_Events&quot;,&#xd;
                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                    },&#xd;
                    &quot;eventMap&quot;: {&#xd;
                      &quot;entry&quot;: [&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSResponseEvent&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSResponseEvent&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.onap.pmcontrol&quot;,&#xd;
                            &quot;source&quot;: &quot;CDS&quot;,&#xd;
                            &quot;target&quot;: &quot;APEX&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSActionIdentifiersType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSResponseCommonHeaderType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;payload&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;payload&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSResponsePayloadType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;status&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;status&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSResponseStatusType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSResponseStatusEvent&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSResponseStatusEvent&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.onap.pmcontrol&quot;,&#xd;
                            &quot;source&quot;: &quot;APEX&quot;,&#xd;
                            &quot;target&quot;: &quot;DCAE&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;status&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;status&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;SubscriptionStatusType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CreateSubscriptionPayloadEvent&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CreateSubscriptionPayloadEvent&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.onap.pmcontrol&quot;,&#xd;
                            &quot;source&quot;: &quot;APEX&quot;,&#xd;
                            &quot;target&quot;: &quot;APEX&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;UUIDType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;payload&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;payload&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSCreateSubscriptionPayloadType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CreateSubscriptionRequestEvent&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CreateSubscriptionRequestEvent&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.onap.pmcontrol&quot;,&#xd;
                            &quot;source&quot;: &quot;APEX&quot;,&#xd;
                            &quot;target&quot;: &quot;APEX&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSActionIdentifiersType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSRequestCommonHeaderType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;payload&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;payload&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSCreateSubscriptionPayloadType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;DeleteSubscriptionPayloadEvent&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;DeleteSubscriptionPayloadEvent&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.onap.pmcontrol&quot;,&#xd;
                            &quot;source&quot;: &quot;APEX&quot;,&#xd;
                            &quot;target&quot;: &quot;APEX&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;UUIDType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;payload&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;payload&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSDeleteSubscriptionPayloadType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;DeleteSubscriptionRequestEvent&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;DeleteSubscriptionRequestEvent&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.onap.pmcontrol&quot;,&#xd;
                            &quot;source&quot;: &quot;APEX&quot;,&#xd;
                            &quot;target&quot;: &quot;APEX&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;actionIdentifiers&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSActionIdentifiersType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;commonHeader&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSRequestCommonHeaderType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;payload&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;payload&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;CDSDeleteSubscriptionPayloadType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;PMSubscriptionOutputEvent&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;PMSubscriptionOutputEvent&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.onap.pmcontrol&quot;,&#xd;
                            &quot;source&quot;: &quot;APEX&quot;,&#xd;
                            &quot;target&quot;: &quot;APEX&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;albumID&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;UUIDType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;testPolicyB&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;testPolicyB&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;nameSpace&quot;: &quot;org.onap.policy.apex.onap.pmcontrol&quot;,&#xd;
                            &quot;source&quot;: &quot;DCAE&quot;,&#xd;
                            &quot;target&quot;: &quot;APEX&quot;,&#xd;
                            &quot;parameter&quot;: {&#xd;
                              &quot;entry&quot;: [&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;changeType&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;changeType&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;closedLoopControlName&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;closedLoopControlName&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;nfName&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;nfName&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;policyName&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;policyName&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                },&#xd;
                                {&#xd;
                                  &quot;key&quot;: &quot;subscription&quot;,&#xd;
                                  &quot;value&quot;: {&#xd;
                                    &quot;key&quot;: &quot;subscription&quot;,&#xd;
                                    &quot;fieldSchemaKey&quot;: {&#xd;
                                      &quot;name&quot;: &quot;SubscriptionType&quot;,&#xd;
                                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                                    },&#xd;
                                    &quot;optional&quot;: false&#xd;
                                  }&#xd;
                                }&#xd;
                              ]&#xd;
                            }&#xd;
                          }&#xd;
                        }&#xd;
                      ]&#xd;
                    }&#xd;
                  },&#xd;
                  &quot;albums&quot;: {&#xd;
                    &quot;key&quot;: {&#xd;
                      &quot;name&quot;: &quot;APEXgRPCPolicy_Albums&quot;,&#xd;
                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                    },&#xd;
                    &quot;albums&quot;: {&#xd;
                      &quot;entry&quot;: [&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;PMSubscriptionAlbum&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;PMSubscriptionAlbum&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;scope&quot;: &quot;policy&quot;,&#xd;
                            &quot;isWritable&quot;: true,&#xd;
                            &quot;itemSchema&quot;: {&#xd;
                              &quot;name&quot;: &quot;PMSubscriptionType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            }&#xd;
                          }&#xd;
                        }&#xd;
                      ]&#xd;
                    }&#xd;
                  },&#xd;
                  &quot;schemas&quot;: {&#xd;
                    &quot;key&quot;: {&#xd;
                      &quot;name&quot;: &quot;APEXgRPCPolicy_Schemas&quot;,&#xd;
                      &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                    },&#xd;
                    &quot;schemas&quot;: {&#xd;
                      &quot;entry&quot;: [&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSActionIdentifiersType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSActionIdentifiersType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;{\n    \&quot;type\&quot;: \&quot;record\&quot;,\n    \&quot;name\&quot;: \&quot;CDSActionIdentifiers_Type\&quot;,\n    \&quot;namespace\&quot;: \&quot;org.onap.policy.apex.onap.helloworld\&quot;,\n    \&quot;fields\&quot;: [\n        {\n            \&quot;name\&quot;: \&quot;actionName\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;blueprintName\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;blueprintVersion\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;mode\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        }\n    ]\n}&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSCreateSubscriptionPayloadType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSCreateSubscriptionPayloadType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;{\n  \&quot;type\&quot;: \&quot;map\&quot;,\n  \&quot;values\&quot;: {\n    \&quot;type\&quot;: \&quot;record\&quot;,\n    \&quot;name\&quot;: \&quot;CDSRequestPayloadEntry\&quot;,\n    \&quot;fields\&quot;: [\n      {\n        \&quot;name\&quot;: \&quot;create_DasH_subscription_DasH_properties\&quot;,\n        \&quot;type\&quot;: {\n          \&quot;name\&quot;: \&quot;create_DasH_subscription_DasH_properties_record\&quot;,\n          \&quot;type\&quot;: \&quot;record\&quot;,\n          \&quot;fields\&quot;: [\n            {\n              \&quot;name\&quot;: \&quot;nfName\&quot;,\n              \&quot;type\&quot;: \&quot;string\&quot;\n            },\n            {\n              \&quot;name\&quot;: \&quot;subscriptionName\&quot;,\n              \&quot;type\&quot;: \&quot;string\&quot;\n            },\n            {\n              \&quot;name\&quot;: \&quot;administrativeState\&quot;,\n              \&quot;type\&quot;: \&quot;string\&quot;\n            },\n            {\n              \&quot;name\&quot;: \&quot;fileBasedGP\&quot;,\n              \&quot;type\&quot;: \&quot;string\&quot;\n            },\n            {\n              \&quot;name\&quot;: \&quot;fileLocation\&quot;,\n              \&quot;type\&quot;: \&quot;string\&quot;\n            },\n            {\n              \&quot;name\&quot;: \&quot;measurementGroups\&quot;,\n              \&quot;type\&quot;: {\n                \&quot;type\&quot;: \&quot;array\&quot;,\n                \&quot;items\&quot;: {\n                  \&quot;name\&quot;: \&quot;measurementGroups_record\&quot;,\n                  \&quot;type\&quot;: \&quot;record\&quot;,\n                  \&quot;fields\&quot;: [\n                    {\n                      \&quot;name\&quot;: \&quot;measurementGroup\&quot;,\n                      \&quot;type\&quot;: {\n                        \&quot;name\&quot;: \&quot;measurementGroup\&quot;,\n                        \&quot;type\&quot;: \&quot;record\&quot;,\n                        \&quot;fields\&quot;: [\n                          {\n                            \&quot;name\&quot;: \&quot;measurementTypes\&quot;,\n                            \&quot;type\&quot;: {\n                              \&quot;type\&quot;: \&quot;array\&quot;,\n                              \&quot;items\&quot;: {\n                                \&quot;name\&quot;: \&quot;measurementTypes_record\&quot;,\n                                \&quot;type\&quot;: \&quot;record\&quot;,\n                                \&quot;fields\&quot;: [\n                                  {\n                                    \&quot;name\&quot;: \&quot;measurementType\&quot;,\n                                    \&quot;type\&quot;: \&quot;string\&quot;\n                                  }\n                                ]\n                              }\n                            }\n                          },\n                          {\n                            \&quot;name\&quot;: \&quot;managedObjectDNsBasic\&quot;,\n                            \&quot;type\&quot;: {\n                              \&quot;type\&quot;: \&quot;array\&quot;,\n                              \&quot;items\&quot;: {\n                                \&quot;name\&quot;: \&quot;managedObjectDNsBasic_record\&quot;,\n                                \&quot;type\&quot;: \&quot;record\&quot;,\n                                \&quot;fields\&quot;: [\n                                  {\n                                    \&quot;name\&quot;: \&quot;DN\&quot;,\n                                    \&quot;type\&quot;: \&quot;string\&quot;\n                                  }\n                                ]\n                              }\n                            }\n                          }\n                        ]\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        }\n      }\n    ]\n  }\n}&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSDeleteSubscriptionPayloadType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSDeleteSubscriptionPayloadType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;{\n  \&quot;type\&quot;: \&quot;map\&quot;,\n  \&quot;values\&quot;: {\n    \&quot;type\&quot;: \&quot;record\&quot;,\n    \&quot;name\&quot;: \&quot;CDSRequestPayloadEntry\&quot;,\n    \&quot;fields\&quot;: [\n      {\n        \&quot;name\&quot;: \&quot;delete_DasH_subscription_DasH_properties\&quot;,\n        \&quot;type\&quot;: {\n          \&quot;name\&quot;: \&quot;delete_DasH_subscription_DasH_properties_record\&quot;,\n          \&quot;type\&quot;: \&quot;record\&quot;,\n          \&quot;fields\&quot;: [\n            {\n              \&quot;name\&quot;: \&quot;nfName\&quot;,\n              \&quot;type\&quot;: \&quot;string\&quot;\n            },\n            {\n              \&quot;name\&quot;: \&quot;subscriptionName\&quot;,\n              \&quot;type\&quot;: \&quot;string\&quot;\n            },\n            {\n              \&quot;name\&quot;: \&quot;administrativeState\&quot;,\n              \&quot;type\&quot;: \&quot;string\&quot;\n            },\n            {\n              \&quot;name\&quot;: \&quot;fileBasedGP\&quot;,\n              \&quot;type\&quot;: \&quot;string\&quot;\n            },\n            {\n              \&quot;name\&quot;: \&quot;fileLocation\&quot;,\n              \&quot;type\&quot;: \&quot;string\&quot;\n            },\n            {\n              \&quot;name\&quot;: \&quot;measurementGroups\&quot;,\n              \&quot;type\&quot;: {\n                \&quot;type\&quot;: \&quot;array\&quot;,\n                \&quot;items\&quot;: {\n                  \&quot;name\&quot;: \&quot;measurementGroups_record\&quot;,\n                  \&quot;type\&quot;: \&quot;record\&quot;,\n                  \&quot;fields\&quot;: [\n                    {\n                      \&quot;name\&quot;: \&quot;measurementGroup\&quot;,\n                      \&quot;type\&quot;: {\n                        \&quot;name\&quot;: \&quot;measurementGroup\&quot;,\n                        \&quot;type\&quot;: \&quot;record\&quot;,\n                        \&quot;fields\&quot;: [\n                          {\n                            \&quot;name\&quot;: \&quot;measurementTypes\&quot;,\n                            \&quot;type\&quot;: {\n                              \&quot;type\&quot;: \&quot;array\&quot;,\n                              \&quot;items\&quot;: {\n                                \&quot;name\&quot;: \&quot;measurementTypes_record\&quot;,\n                                \&quot;type\&quot;: \&quot;record\&quot;,\n                                \&quot;fields\&quot;: [\n                                  {\n                                    \&quot;name\&quot;: \&quot;measurementType\&quot;,\n                                    \&quot;type\&quot;: \&quot;string\&quot;\n                                  }\n                                ]\n                              }\n                            }\n                          },\n                          {\n                            \&quot;name\&quot;: \&quot;managedObjectDNsBasic\&quot;,\n                            \&quot;type\&quot;: {\n                              \&quot;type\&quot;: \&quot;array\&quot;,\n                              \&quot;items\&quot;: {\n                                \&quot;name\&quot;: \&quot;managedObjectDNsBasic_record\&quot;,\n                                \&quot;type\&quot;: \&quot;record\&quot;,\n                                \&quot;fields\&quot;: [\n                                  {\n                                    \&quot;name\&quot;: \&quot;DN\&quot;,\n                                    \&quot;type\&quot;: \&quot;string\&quot;\n                                  }\n                                ]\n                              }\n                            }\n                          }\n                        ]\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        }\n      }\n    ]\n  }\n}&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSRequestCommonHeaderType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSRequestCommonHeaderType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;{\n    \&quot;type\&quot;: \&quot;record\&quot;,\n    \&quot;name\&quot;: \&quot;CDSRequestCommonHeader_Type\&quot;,\n    \&quot;namespace\&quot;: \&quot;org.onap.policy.apex.onap.helloworld\&quot;,\n    \&quot;fields\&quot;: [\n        {\n            \&quot;name\&quot;: \&quot;originatorId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;requestId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;subRequestId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        }\n    ]\n}&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSResponseCommonHeaderType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSResponseCommonHeaderType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;{\n    \&quot;type\&quot;: \&quot;record\&quot;,\n    \&quot;name\&quot;: \&quot;CDSResponseCommonHeader_Type\&quot;,\n    \&quot;namespace\&quot;: \&quot;org.onap.policy.apex.onap.helloworld\&quot;,\n    \&quot;fields\&quot;: [\n        {\n            \&quot;name\&quot;: \&quot;originatorId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;requestId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;subRequestId\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;timestamp\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        }\n    ]\n}&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSResponsePayloadType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSResponsePayloadType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;{\n  \&quot;name\&quot;: \&quot;CDSResponsePayloadEntry\&quot;,\n  \&quot;type\&quot;: \&quot;record\&quot;,\n  \&quot;namespace\&quot;: \&quot;com.acme.avro\&quot;,\n  \&quot;fields\&quot;: [\n    {\n      \&quot;name\&quot;: \&quot;create_DasH_subscription_DasH_response\&quot;,\n      \&quot;type\&quot;: {\n        \&quot;name\&quot;: \&quot;create_DasH_subscription_DasH_response\&quot;,\n        \&quot;type\&quot;: \&quot;record\&quot;,\n        \&quot;fields\&quot;: [\n          {\n            \&quot;name\&quot;: \&quot;odl_DasH_response\&quot;,\n            \&quot;type\&quot;: {\n              \&quot;name\&quot;: \&quot;odl_DasH_response\&quot;,\n              \&quot;type\&quot;: \&quot;record\&quot;,\n              \&quot;fields\&quot;: [\n                  {\n                    \&quot;name\&quot;: \&quot;status\&quot;,\n                    \&quot;type\&quot;: \&quot;string\&quot;\n                  }\n              ]\n            }\n          }\n        ]\n      }\n    }\n  ]\n}&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;CDSResponseStatusType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;CDSResponseStatusType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;{\n    \&quot;type\&quot;: \&quot;record\&quot;,\n    \&quot;name\&quot;: \&quot;CDSResponseStatus_Type\&quot;,\n    \&quot;namespace\&quot;: \&quot;org.onap.policy.apex.onap.helloworld\&quot;,\n    \&quot;fields\&quot;: [\n        {\n            \&quot;name\&quot;: \&quot;code\&quot;,\n            \&quot;type\&quot;: \&quot;int\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;eventType\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;timestamp\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;message\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        }\n    ]\n}&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;PMSubscriptionType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;PMSubscriptionType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;{\n  \&quot;name\&quot;: \&quot;PMSubscription\&quot;,\n  \&quot;type\&quot;: \&quot;record\&quot;,\n  \&quot;namespace\&quot;: \&quot;org.onap.policy.apex.onap.pmcontrol\&quot;,\n  \&quot;fields\&quot;: [\n    {\n      \&quot;name\&quot;: \&quot;nfName\&quot;,\n      \&quot;type\&quot;: \&quot;string\&quot;\n    },\n    {\n      \&quot;name\&quot;: \&quot;changeType\&quot;,\n      \&quot;type\&quot;: \&quot;string\&quot;\n    },\n    {\n      \&quot;name\&quot;: \&quot;closedLoopControlName\&quot;,\n      \&quot;type\&quot;: \&quot;string\&quot;\n    },\n    {\n      \&quot;name\&quot;: \&quot;policyName\&quot;,\n      \&quot;type\&quot;: \&quot;string\&quot;\n    },\n    {\n      \&quot;name\&quot;: \&quot;subscription\&quot;,\n      \&quot;type\&quot;: {\n        \&quot;name\&quot;: \&quot;subscription\&quot;,\n        \&quot;type\&quot;: \&quot;record\&quot;,\n        \&quot;fields\&quot;: [\n          {\n            \&quot;name\&quot;: \&quot;subscriptionName\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;administrativeState\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;fileBasedGP\&quot;,\n            \&quot;type\&quot;: \&quot;int\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;fileLocation\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n          },\n          {\n            \&quot;name\&quot;: \&quot;measurementGroups\&quot;,\n            \&quot;type\&quot;: {\n              \&quot;type\&quot;: \&quot;array\&quot;,\n              \&quot;items\&quot;: {\n                \&quot;name\&quot;: \&quot;Measurement_Groups_Type\&quot;,\n                \&quot;type\&quot;: \&quot;record\&quot;,\n                \&quot;fields\&quot;: [\n                  {\n                    \&quot;name\&quot;: \&quot;measurementGroup\&quot;,\n                    \&quot;type\&quot;: {\n                      \&quot;name\&quot;: \&quot;Measurement_Group_Type\&quot;,\n                      \&quot;type\&quot;: \&quot;record\&quot;,\n                      \&quot;fields\&quot;: [\n                        {\n                          \&quot;name\&quot;: \&quot;measurementTypes\&quot;,\n                          \&quot;type\&quot;: {\n                            \&quot;type\&quot;: \&quot;array\&quot;,\n                            \&quot;items\&quot;: {\n                              \&quot;name\&quot;: \&quot;Measurement_Types_Type\&quot;,\n                              \&quot;type\&quot;: \&quot;record\&quot;,\n                              \&quot;fields\&quot;: [\n                                {\n                                  \&quot;name\&quot;: \&quot;measurementType\&quot;,\n                                  \&quot;type\&quot;: \&quot;string\&quot;\n                                }\n                              ]\n                            }\n                          }\n                        },\n                        {\n                          \&quot;name\&quot;: \&quot;managedObjectDNsBasic\&quot;,\n                          \&quot;type\&quot;: {\n                            \&quot;type\&quot;: \&quot;array\&quot;,\n                            \&quot;items\&quot;: {\n                              \&quot;name\&quot;: \&quot;Managed_Object_Dns_Basic_Type\&quot;,\n                              \&quot;type\&quot;: \&quot;record\&quot;,\n                              \&quot;fields\&quot;: [\n                                {\n                                  \&quot;name\&quot;: \&quot;DN\&quot;,\n                                  \&quot;type\&quot;: \&quot;string\&quot;\n                                }\n                              ]\n                            }\n                          }\n                        }\n                      ]\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      }\n    }\n  ]\n}&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;SimpleIntType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;SimpleIntType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;java.lang.Integer&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;SimpleStringType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;java.lang.String&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;SubscriptionStatusType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;SubscriptionStatusType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;{\n    \&quot;type\&quot;: \&quot;record\&quot;,\n    \&quot;name\&quot;: \&quot;ActivateSubscriptionStatus_Type\&quot;,\n    \&quot;namespace\&quot;: \&quot;org.onap.policy.apex.onap.helloworld\&quot;,\n    \&quot;fields\&quot;: [\n        {\n            \&quot;name\&quot;: \&quot;subscriptionName\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;nfName\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;changeType\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        },\n        {\n            \&quot;name\&quot;: \&quot;message\&quot;,\n            \&quot;type\&quot;: \&quot;string\&quot;\n        }\n    ]\n}&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;SubscriptionType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;SubscriptionType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Avro&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;{\n  \&quot;name\&quot;: \&quot;subscription\&quot;,\n  \&quot;type\&quot;: \&quot;record\&quot;,\n  \&quot;fields\&quot;: [\n    {\n      \&quot;name\&quot;: \&quot;subscriptionName\&quot;,\n      \&quot;type\&quot;: \&quot;string\&quot;\n    },\n    {\n      \&quot;name\&quot;: \&quot;administrativeState\&quot;,\n      \&quot;type\&quot;: \&quot;string\&quot;\n    },\n    {\n      \&quot;name\&quot;: \&quot;fileBasedGP\&quot;,\n      \&quot;type\&quot;: \&quot;int\&quot;\n    },\n    {\n      \&quot;name\&quot;: \&quot;fileLocation\&quot;,\n      \&quot;type\&quot;: \&quot;string\&quot;\n    },\n    {\n      \&quot;name\&quot;: \&quot;measurementGroups\&quot;,\n      \&quot;type\&quot;: {\n        \&quot;type\&quot;: \&quot;array\&quot;,\n        \&quot;items\&quot;: {\n          \&quot;name\&quot;: \&quot;Measurement_Groups_Type\&quot;,\n          \&quot;type\&quot;: \&quot;record\&quot;,\n          \&quot;fields\&quot;: [\n            {\n              \&quot;name\&quot;: \&quot;measurementGroup\&quot;,\n              \&quot;type\&quot;: {\n                \&quot;name\&quot;: \&quot;Measurement_Group_Type\&quot;,\n                \&quot;type\&quot;: \&quot;record\&quot;,\n                \&quot;fields\&quot;: [\n                  {\n                    \&quot;name\&quot;: \&quot;measurementTypes\&quot;,\n                    \&quot;type\&quot;: {\n                      \&quot;type\&quot;: \&quot;array\&quot;,\n                      \&quot;items\&quot;: {\n                        \&quot;name\&quot;: \&quot;Measurement_Types_Type\&quot;,\n                        \&quot;type\&quot;: \&quot;record\&quot;,\n                        \&quot;fields\&quot;: [\n                          {\n                            \&quot;name\&quot;: \&quot;measurementType\&quot;,\n                            \&quot;type\&quot;: \&quot;string\&quot;\n                          }\n                        ]\n                      }\n                    }\n                  },\n                  {\n                    \&quot;name\&quot;: \&quot;managedObjectDNsBasic\&quot;,\n                    \&quot;type\&quot;: {\n                      \&quot;type\&quot;: \&quot;array\&quot;,\n                      \&quot;items\&quot;: {\n                        \&quot;name\&quot;: \&quot;Managed_Object_Dns_Basic_Type\&quot;,\n                        \&quot;type\&quot;: \&quot;record\&quot;,\n                        \&quot;fields\&quot;: [\n                          {\n                            \&quot;name\&quot;: \&quot;DN\&quot;,\n                            \&quot;type\&quot;: \&quot;string\&quot;\n                          }\n                        ]\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      }\n    }\n  ]\n}&quot;&#xd;
                          }&#xd;
                        },&#xd;
                        {&#xd;
                          &quot;key&quot;: {&#xd;
                            &quot;name&quot;: &quot;UUIDType&quot;,&#xd;
                            &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                          },&#xd;
                          &quot;value&quot;: {&#xd;
                            &quot;key&quot;: {&#xd;
                              &quot;name&quot;: &quot;UUIDType&quot;,&#xd;
                              &quot;version&quot;: &quot;0.0.1&quot;&#xd;
                            },&#xd;
                            &quot;schemaFlavour&quot;: &quot;Java&quot;,&#xd;
                            &quot;schemaDefinition&quot;: &quot;java.util.UUID&quot;&#xd;
                          }&#xd;
                        }&#xd;
                      ]&#xd;
                    }&#xd;
                  }&#xd;
                }&#xd;
              }&#xd;
            },&#xd;
            &quot;eventOutputParameters&quot;: {&#xd;
              &quot;logOutputter&quot;: {&#xd;
                &quot;carrierTechnologyParameters&quot;: {&#xd;
                  &quot;carrierTechnology&quot;: &quot;FILE&quot;,&#xd;
                  &quot;parameters&quot;: {&#xd;
                    &quot;fileName&quot;: &quot;outputevents.log&quot;&#xd;
                  }&#xd;
                },&#xd;
                &quot;eventProtocolParameters&quot;: {&#xd;
                  &quot;eventProtocol&quot;: &quot;JSON&quot;&#xd;
                }&#xd;
              },&#xd;
              &quot;CDSRequestProducer&quot;: {&#xd;
                &quot;carrierTechnologyParameters&quot;: {&#xd;
                  &quot;carrierTechnology&quot;: &quot;GRPC&quot;,&#xd;
                  &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.plugins.event.carrier.grpc.GrpcCarrierTechnologyParameters&quot;,&#xd;
                  &quot;parameters&quot;: {&#xd;
                    &quot;host&quot;: &quot;10.2.0.122&quot;,&#xd;
                    &quot;port&quot;: 54322,&#xd;
                    &quot;username&quot;: &quot;ccsdkapps&quot;,&#xd;
                    &quot;password&quot;: &quot;ccsdkapps&quot;,&#xd;
                    &quot;timeout&quot;: 60&#xd;
                  }&#xd;
                },&#xd;
                &quot;eventProtocolParameters&quot;: {&#xd;
                  &quot;eventProtocol&quot;: &quot;JSON&quot;&#xd;
                },&#xd;
                &quot;eventNameFilter&quot;: &quot;(Create|Delete)SubscriptionRequestEvent&quot;,&#xd;
                &quot;requestorMode&quot;: true,&#xd;
                &quot;requestorPeer&quot;: &quot;CDSRequestConsumer&quot;,&#xd;
                &quot;requestorTimeout&quot;: 500&#xd;
              },&#xd;
              &quot;CDSReplyProducer&quot;: {&#xd;
                &quot;carrierTechnologyParameters&quot;: {&#xd;
                  &quot;carrierTechnology&quot;: &quot;RESTCLIENT&quot;,&#xd;
                  &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.plugins.event.carrier.restclient.RestClientCarrierTechnologyParameters&quot;,&#xd;
                  &quot;parameters&quot;: {&#xd;
                    &quot;url&quot;: &quot;http://message-router:3904/events/POLICY-CL-MGT&quot;&#xd;
                  }&#xd;
                },&#xd;
                &quot;eventProtocolParameters&quot;: {&#xd;
                  &quot;eventProtocol&quot;: &quot;JSON&quot;&#xd;
                },&#xd;
                &quot;eventNameFilter&quot;: &quot;CDSResponseStatusEvent&quot;&#xd;
              }&#xd;
            },&#xd;
            &quot;eventInputParameters&quot;: {&#xd;
              &quot;DCAEConsumer&quot;: {&#xd;
                &quot;carrierTechnologyParameters&quot;: {&#xd;
                  &quot;carrierTechnology&quot;: &quot;RESTCLIENT&quot;,&#xd;
                  &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.plugins.event.carrier.restclient.RestClientCarrierTechnologyParameters&quot;,&#xd;
                  &quot;parameters&quot;: {&#xd;
                    &quot;url&quot;: &quot;http://message-router:3904/events/unauthenticated.DCAE_CL_OUTPUT/cg1/c1?timeout=30000&quot;&#xd;
                  }&#xd;
                },&#xd;
                &quot;eventProtocolParameters&quot;: {&#xd;
                  &quot;eventProtocol&quot;: &quot;JSON&quot;,&#xd;
                  &quot;parameters&quot;: {&#xd;
                    &quot;nameAlias&quot;: &quot;testPolicyB&quot;&#xd;
                  }&#xd;
                },&#xd;
                &quot;eventName&quot;: &quot;testPolicyB&quot;,&#xd;
                &quot;eventNameFilter&quot;: &quot;testPolicyB&quot;&#xd;
              },&#xd;
              &quot;CDSRequestConsumer&quot;: {&#xd;
                &quot;carrierTechnologyParameters&quot;: {&#xd;
                  &quot;carrierTechnology&quot;: &quot;GRPC&quot;,&#xd;
                  &quot;parameterClassName&quot;: &quot;org.onap.policy.apex.plugins.event.carrier.grpc.GrpcCarrierTechnologyParameters&quot;&#xd;
                },&#xd;
                &quot;eventProtocolParameters&quot;: {&#xd;
                  &quot;eventProtocol&quot;: &quot;JSON&quot;&#xd;
                },&#xd;
                &quot;eventName&quot;: &quot;CDSResponseEvent&quot;,&#xd;
                &quot;eventNameFilter&quot;: &quot;CDSResponseEvent&quot;,&#xd;
                &quot;requestorMode&quot;: true,&#xd;
                &quot;requestorPeer&quot;: &quot;CDSRequestProducer&quot;,&#xd;
                &quot;requestorTimeout&quot;: 500&#xd;
              }&#xd;
            }&#xd;
          },&#xd;
          &quot;name&quot;: &quot;operational.apex.stabilityTestDefaultDomain&quot;,&#xd;
          &quot;version&quot;: &quot;1.0.0&quot;,&#xd;
          &quot;metadata&quot;: {&#xd;
            &quot;policy-id&quot;: &quot;operational.apex.stabilityTestDefaultDomain&quot;,&#xd;
            &quot;policy-version&quot;: &quot;1.0.0&quot;&#xd;
          }&#xd;
        }&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  &quot;name&quot;: &quot;ToscaServiceTemplateSimple&quot;,&#xd;
  &quot;version&quot;: &quot;1.0.0&quot;,&#xd;
  &quot;metadata&quot;: {}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOSTNAME}</stringProp>
          <stringProp name="HTTPSampler.port">${API_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/policy/api/v1/policies</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Deploy policy" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;groups&quot;: [&#xd;
        {&#xd;
            &quot;name&quot;: &quot;defaultGroup&quot;,&#xd;
            &quot;deploymentSubgroups&quot;: [&#xd;
                {&#xd;
                    &quot;pdpType&quot;: &quot;apex&quot;,&#xd;
                    &quot;action&quot;: &quot;POST&quot;,&#xd;
                    &quot;policies&quot;: [&#xd;
                        {&#xd;
                            &quot;name&quot;: &quot;operational.apex.stabilityTestDefaultDomain&quot;,&#xd;
                            &quot;version&quot;: &quot;1.0.0&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOSTNAME}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/pdps/deployments/batch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${threads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">5400</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Health Check" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOSTNAME}</stringProp>
          <stringProp name="HTTPSampler.port">${APEX_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/policy/apex-pdp/v1/healthcheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper;

def res = [];
if (prev.getResponseCode() == &apos;200&apos;) {
    def jsonSlurper = new JsonSlurper();
    res = jsonSlurper.parseText(prev.getResponseDataAsString());

    assert res instanceof Map;
    assert res.healthy == true;
    assert res.message == &apos;alive&apos;;
}
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Test Controller" enabled="true"/>
        <hashTree>
          <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="false">
            <stringProp name="groupSize">${threads}</stringProp>
            <stringProp name="timeoutInMs">${threadsTimeOutInMs}</stringProp>
          </SyncTimer>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send Input Event" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;changeType&quot;: &quot;CREATE&quot;,&#xd;
  &quot;closedLoopControlName&quot;: &quot;test&quot;,&#xd;
  &quot;policyName&quot;: &quot;test&quot;,&#xd;
  &quot;nfName&quot;: &quot;pnf300&quot;,&#xd;
  &quot;subscription&quot;: {&#xd;
    &quot;subscriptionName&quot;: &quot;testPolicyB&quot;,&#xd;
    &quot;administrativeState&quot;: &quot;UNLOCKED&quot;,&#xd;
    &quot;fileBasedGP&quot;: 15,&#xd;
    &quot;fileLocation&quot;: &quot;/pm/pm.xml&quot;,&#xd;
    &quot;measurementGroups&quot;: [&#xd;
      {&#xd;
        &quot;measurementGroup&quot;: {&#xd;
          &quot;measurementTypes&quot;: [&#xd;
            {&#xd;
              &quot;measurementType&quot;: &quot;countera&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;measurementType&quot;: &quot;counterb&quot;&#xd;
            }&#xd;
          ],&#xd;
          &quot;managedObjectDNsBasic&quot;: [&#xd;
            {&#xd;
              &quot;DN&quot;: &quot;dna&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;DN&quot;: &quot;dnb&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;measurementGroup&quot;: {&#xd;
          &quot;measurementTypes&quot;: [&#xd;
            {&#xd;
              &quot;measurementType&quot;: &quot;counterc&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;measurementType&quot;: &quot;counterd&quot;&#xd;
            }&#xd;
          ],&#xd;
          &quot;managedObjectDNsBasic&quot;: [&#xd;
            {&#xd;
              &quot;DN&quot;: &quot;dnc&quot;&#xd;
            },&#xd;
            {&#xd;
              &quot;DN&quot;: &quot;dnd&quot;&#xd;
            }&#xd;
          ]&#xd;
        }&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOSTNAME}</stringProp>
            <stringProp name="HTTPSampler.port">${DMAAP_PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/events/unauthenticated.DCAE_CL_OUTPUT</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Send input event to apex-pdp</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response Code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Scope.variable">Response code</stringProp>
              <stringProp name="TestPlan.comments">Assert response code coming back from apex-pdp</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="WAIT" enabled="true">
              <stringProp name="ConstantTimer.delay">${wait}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get the ouput event response" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${HOSTNAME}</stringProp>
            <stringProp name="HTTPSampler.port">${DMAAP_PORT}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/events/POLICY-CL-MGT/cg${__threadNum}/c1?timeout=30000</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Check output event </stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response Code" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Scope.variable">Response code</stringProp>
              <stringProp name="TestPlan.comments">Assert response code coming back from apex-pdp</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert Response Message" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1608759622">org.onap.policy.apex.onap.pmcontrol</stringProp>
                <stringProp name="1996002556">CREATE</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Scope.variable">Response code</stringProp>
              <stringProp name="TestPlan.comments">Assert response message coming back from apex-pdp</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="WAIT" enabled="false">
              <stringProp name="ConstantTimer.delay">${wait}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </PostThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Un deploy policy" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;groups&quot;: [&#xd;
        {&#xd;
            &quot;name&quot;: &quot;defaultGroup&quot;,&#xd;
            &quot;deploymentSubgroups&quot;: [&#xd;
                {&#xd;
                    &quot;pdpType&quot;: &quot;apex&quot;,&#xd;
                    &quot;action&quot;: &quot;DELETE&quot;,&#xd;
                    &quot;policies&quot;: [&#xd;
                        {&#xd;
                            &quot;name&quot;: &quot;operational.apex.stabilityTestDefaultDomain&quot;,&#xd;
                            &quot;version&quot;: &quot;1.0.0&quot;&#xd;
                        }&#xd;
                    ]&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOSTNAME}</stringProp>
          <stringProp name="HTTPSampler.port">${PAP_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/policy/pap/v1/pdps/deployments/batch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Policy" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${HOSTNAME}</stringProp>
          <stringProp name="HTTPSampler.port">${API_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/policy/api/v1/policytypes/onap.policies.native.Apex/versions/1.0.0/policies/operational.apex.stabilityTestDefaultDomain/versions/1.0.0</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/home/adityap/apex_stability/Stability.log</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/mnt/c/Users/arek/Desktop/s3p_results/performance/6/testresults_1.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/home/adityap/apex_stability/resultTable.log</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
